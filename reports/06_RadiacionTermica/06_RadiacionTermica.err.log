Traceback (most recent call last):
  File "/home/panxopanza/miniconda3/lib/python3.12/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
  File "/home/panxopanza/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/panxopanza/miniconda3/lib/python3.12/site-packages/jupyter_core/utils/__init__.py", line 173, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/panxopanza/miniconda3/lib/python3.12/asyncio/base_events.py", line 685, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "/home/panxopanza/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "/home/panxopanza/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/home/panxopanza/miniconda3/lib/python3.12/site-packages/nbclient/client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import empylib.waveoptics as wv
import empylib.nklib as nk
import numpy as np
from numpy import log10, radians, cos
import matplotlib.pyplot as plt
from empylib.ref_spectra import Bplanck

def plot_emisivity_glass(Temp,d,lam0,theta0):
    # PARAMETROS DE ENTRADA
    lam = np.linspace(0.3,15,100)
    Nfront = 1.0                 # √≠ndice de refracci√≥n medio superior
    N1     = nk.SiO2(lam)        # √≠ndice de refracci√≥n capa intermedia
    Nback  = 1.0                 # √≠ndice de refracci√≥n medio inferior
    N = (Nfront, N1, Nback)      # indices de refracci√≥n (above, mid, below)
    #-------------------------------------------------------------------------

    # C√ÅLCULO DE VARIABLES
    # 1. Gr√°fico 1: Reflectancia y transmitancia espectral en theta0
    Rs, Ts = wv.incoh_multilayer(lam,radians(theta0), N, d*1E3, pol='TM')
    Rp, Tp = wv.incoh_multilayer(lam,radians(theta0), N, d*1E3, pol='TE')
    
    R_lam = (Rs + Rp)/2
    T_lam = (Ts + Tp)/2
    A_lam = 1 - T_lam - R_lam  # absortancia espectral
    
   # 2. Gr√°fico 2: Reflectancia y transmitancia direccional en lam0
    theta = np.linspace(0,90,100)
    N = (Nfront, nk.SiO2(lam0), Nback) # indices de refracci√≥n (above, mid, below)
    
    A_theta = [] # generamos la absortancia direccional en este loop
    for theta_i in theta:
        Rs, Ts = wv.incoh_multilayer(lam0,radians(theta_i), N, d*1E3, pol='TM')
        Rp, Tp = wv.incoh_multilayer(lam0,radians(theta_i), N, d*1E3, pol='TE')
        R = (Rs + Rp)/2
        T = (Ts + Tp)/2
        A_theta.append(1 - T - R)
    A_theta = np.array(A_theta).flatten() # convertimos la lista a ndarray
    
    # 3. Gr√°fico 3: Poder de emisi√≥n direccional espectral
    E_lam = A_lam*Bplanck(lam,Temp)*cos(radians(theta0)) # poder de emisi√≥n material
    E_bb  =       Bplanck(lam,Temp)*cos(radians(theta0)) # poder de emisi√≥n de cuerpo negro
    #-------------------------------------------------------------------------
    
    # GRAFICAMOS RESULTADOS.
    fig, ax = plt.subplots(1,3)             # 3 ejes
    fig.set_size_inches(16, 5)              # Tama√±o de figura
    
    # 1. Propiedades radiativas direccional espectral para theta0
    ax[0].plot(lam,R_lam,'--r',label=r'$R_{\lambda,\Omega}$',linewidth=0.5)
    ax[0].plot(lam,T_lam,'--b',label=r'$T_{\lambda,\Omega}$',linewidth=0.5)
    ax[0].plot(lam,A_lam,'-k',label=r'$A_{\lambda,\Omega}$',linewidth=2.0)  
    ax[0].plot(lam0,np.interp(lam0,lam,A_lam),'or',ms=8.0)   
    ax[0].set_xlabel('$\lambda$ ($\mu$m)',fontsize=18)
    ax[0].set_ylabel(r'$R_{\lambda,\Omega}$, $T_{\lambda,\Omega}$ y $A_{\lambda,\Omega}$',fontsize=18)
    ax[0].set_ylim(0,1.05)
    ax[0].set_title(r'$\theta = $ %i¬∞' % theta0,fontsize=18)
    ax[0].legend(fontsize=16, loc='lower right')
    ax[0].tick_params(labelsize=16)
    
    # 2. Emisividad direccional espectral para lam0
    ax[1].plot(theta,A_theta,'-k')  
    ax[1].plot(theta0,np.interp(theta0,theta,A_theta),'or',ms=8.0)   
    ax[1].set_xlabel(r'$\theta$ (deg)',fontsize=18)
    ax[1].set_ylabel(r'$\epsilon_{\lambda,\Omega}(\theta)$',fontsize=18)
    ax[1].set_title(r'$\lambda = $ %.2f $\mu$m' % lam0,fontsize=18)
    ax[1].set_ylim(0,1.05)
    ax[1].tick_params(labelsize=16)
    
    # 3. Poder de emisi√≥n direccional espectral para theta0
    ax[2].plot(lam,E_lam,'-k',label =r'$E_{\lambda,\Omega}$')
    ax[2].plot(lam,E_bb,'-r',label =r'$E_\mathrm{bb}$') 
    ax[2].plot(lam0,np.interp(lam0,lam,E_lam),'or',ms=8.0)   
    ax[2].set_xlabel('Longitud de onda ($\mu$m)',fontsize=18)
    ax[2].set_ylabel(r'$E_{\lambda,\Omega}$(T) (W/m$^2$-$\mu$m-sr)',fontsize=18)
    ax[2].set_title(r'd = %.2f mm, $\theta$=%i¬∞' % (d,theta0) ,fontsize=18)
    ax[2].set_ylim(0,max(Bplanck(lam,Temp))*1.05)
    ax[2].legend(fontsize=16)
    ax[2].tick_params(labelsize=16)
    
    plt.subplots_adjust(wspace=0.30)
    plt.show()
------------------

----- stderr -----
<>:53: SyntaxWarning: invalid escape sequence '\l'
<>:73: SyntaxWarning: invalid escape sequence '\m'
<>:53: SyntaxWarning: invalid escape sequence '\l'
<>:73: SyntaxWarning: invalid escape sequence '\m'
/tmp/ipykernel_252/242146989.py:53: SyntaxWarning: invalid escape sequence '\l'
  ax[0].set_xlabel('$\lambda$ ($\mu$m)',fontsize=18)
/tmp/ipykernel_252/242146989.py:73: SyntaxWarning: invalid escape sequence '\m'
  ax[2].set_xlabel('Longitud de onda ($\mu$m)',fontsize=18)
/tmp/ipykernel_252/242146989.py:53: SyntaxWarning: invalid escape sequence '\l'
  ax[0].set_xlabel('$\lambda$ ($\mu$m)',fontsize=18)
/tmp/ipykernel_252/242146989.py:73: SyntaxWarning: invalid escape sequence '\m'
  ax[2].set_xlabel('Longitud de onda ($\mu$m)',fontsize=18)
------------------

[0;31m---------------------------------------------------------------------------[0m
[0;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [0;32mIn[6], line 5[0m
[1;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mas[39;00m [38;5;21;01mnp[39;00m
[1;32m      4[0m [38;5;28;01mfrom[39;00m [38;5;21;01mnumpy[39;00m [38;5;28;01mimport[39;00m log10, radians, cos
[0;32m----> 5[0m [38;5;28;01mimport[39;00m [38;5;21;01mmatplotlib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mpyplot[39;00m [38;5;28;01mas[39;00m [38;5;21;01mplt[39;00m
[1;32m      6[0m [38;5;28;01mfrom[39;00m [38;5;21;01mempylib[39;00m[38;5;21;01m.[39;00m[38;5;21;01mref_spectra[39;00m [38;5;28;01mimport[39;00m Bplanck
[1;32m      8[0m [38;5;28;01mdef[39;00m [38;5;21mplot_emisivity_glass[39m(Temp,d,lam0,theta0):
[1;32m      9[0m     [38;5;66;03m# PARAMETROS DE ENTRADA[39;00m

[0;31mModuleNotFoundError[0m: No module named 'matplotlib'

